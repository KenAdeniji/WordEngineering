//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InformationInTransit.AirDrop.Temperature
{
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureService.Scale", Namespace="http://schemas.datacontract.org/2004/07/InformationInTransit.AirDrop.Temperature")]
    public enum TemperatureServiceScale : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Celsuis = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fahrenheit = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureService.Metric", Namespace="http://schemas.datacontract.org/2004/07/InformationInTransit.AirDrop.Temperature")]
    public partial class TemperatureServiceMetric : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double CelsuisField;
        
        private double FahrenheitField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Celsuis
        {
            get
            {
                return this.CelsuisField;
            }
            set
            {
                this.CelsuisField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Fahrenheit
        {
            get
            {
                return this.FahrenheitField;
            }
            set
            {
                this.FahrenheitField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://InformationInTransit.AirDrop.Temperature", ConfigurationName="ITemperature")]
public interface ITemperature
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://InformationInTransit.AirDrop.Temperature/ITemperature/Celsuis", ReplyAction="http://InformationInTransit.AirDrop.Temperature/ITemperature/CelsuisResponse")]
    double Celsuis(double fahrenheit);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://InformationInTransit.AirDrop.Temperature/ITemperature/Fahrenheit", ReplyAction="http://InformationInTransit.AirDrop.Temperature/ITemperature/FahrenheitResponse")]
    double Fahrenheit(double celsuis);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://InformationInTransit.AirDrop.Temperature/ITemperature/Hello")]
    void Hello(string greeting);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://InformationInTransit.AirDrop.Temperature/ITemperature/Range", ReplyAction="http://InformationInTransit.AirDrop.Temperature/ITemperature/RangeResponse")]
    InformationInTransit.AirDrop.Temperature.TemperatureServiceMetric[] Range(double start, double step, double finish, InformationInTransit.AirDrop.Temperature.TemperatureServiceScale scale);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ITemperatureChannel : ITemperature, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class TemperatureClient : System.ServiceModel.ClientBase<ITemperature>, ITemperature
{
    
    public TemperatureClient()
    {
    }
    
    public TemperatureClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public TemperatureClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TemperatureClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TemperatureClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public double Celsuis(double fahrenheit)
    {
        return base.Channel.Celsuis(fahrenheit);
    }
    
    public double Fahrenheit(double celsuis)
    {
        return base.Channel.Fahrenheit(celsuis);
    }
    
    public void Hello(string greeting)
    {
        base.Channel.Hello(greeting);
    }
    
    public InformationInTransit.AirDrop.Temperature.TemperatureServiceMetric[] Range(double start, double step, double finish, InformationInTransit.AirDrop.Temperature.TemperatureServiceScale scale)
    {
        return base.Channel.Range(start, step, finish, scale);
    }
}
