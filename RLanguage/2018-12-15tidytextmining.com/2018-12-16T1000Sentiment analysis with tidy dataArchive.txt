#https://www.tidytextmining.com/sentiment.html#the-sentiments-dataset
#https://ropensci.org/tutorials/gutenbergr_tutorial

library(tidytext)

sentiments

#The three general-purpose lexicons are
#    AFINN from Finn Ã…rup Nielsen,
#    bing from Bing Liu and collaborators, and
#    nrc from Saif Mohammad and Peter Turney.
get_sentiments("afinn")
get_sentiments("bing")
get_sentiments("nrc")

install.packages("gutenbergr")
library(gutenbergr)

library(dplyr)
library(stringr)

gutenberg_metadata %>%
  filter(title == "The King James Version of the Bible")
  
#Download book ID 10 from the Gutenberg library. The King James Version of the Bible
kjv <- gutenberg_download(c(10))

#Spilt text into words
tidy_kjv <- kjv %>%
  mutate(linenumber = row_number(),
         chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]", 
                                                 ignore_case = TRUE)))) %>%
  ungroup() %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)
  
#Get all the sentiments of the nrc that are associated with joy.
nrc_joy <- get_sentiments("nrc") %>% 
  filter(sentiment == "joy")
  
#Extract the words associated with joy from the KJV by linking these words with the nrc.
tidy_kjv %>%
  inner_join(nrc_joy) %>%
  count(word, sort = TRUE)

library(tidyr)

kjv_sentiment <- tidy_kjv %>%
  inner_join(get_sentiments("bing")) %>%
  count(index = linenumber %/% 80, sentiment) %>%
  spread(sentiment, n, fill = 0) %>%
  mutate(sentiment = positive - negative)
  
library(ggplot2)

ggplot(kjv_sentiment, aes(index, sentiment)) +
  geom_col(show.legend = FALSE) 
  
#Display the top 20 records.  
head(kjv,20) 

#Most common positive and negative words
bing_word_counts <- tidy_kjv %>%
  inner_join(get_sentiments("bing")) %>%
  count(word, sentiment, sort = TRUE) %>%
  ungroup()
 
bing_word_counts
 
bing_word_counts %>%
  group_by(sentiment) %>%
  top_n(10) %>%
  ungroup() %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n, fill = sentiment)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~sentiment, scales = "free_y") +
  labs(y = "Contribution to sentiment",
       x = NULL) +
  coord_flip()

#custom_stop_words <- bind_rows(data_frame(word = c("miss"), 
#                                          lexicon = c("custom")), 
#                               stop_words)
#custom_stop_words  

install.packages("wordcloud")
library(wordcloud)

tidy_kjv %>%
  anti_join(stop_words) %>%
  count(word) %>%
  with(wordcloud(word, n, max.words = 100))
  
