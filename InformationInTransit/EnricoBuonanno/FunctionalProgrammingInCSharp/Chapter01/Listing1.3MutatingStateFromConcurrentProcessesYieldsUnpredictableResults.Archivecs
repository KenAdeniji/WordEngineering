using System;
using System.Threading.Tasks;

using static System.Console;
using static System.Linq.Enumerable;


/*
	2019-01-04	Created.	http://manning-content.s3.amazonaws.com/download/1/857d550-856b-4ea8-9e91-843c1d956583/chapter%201%20sample.pdf
*/
namespace EnricoBuonanno.FunctionalProgrammingInCSharp.Chapter01
{
	public static class MutatingStateFromConcurrentProcessesYieldsUnpredictableResults
	{
		public static void Main()
		{
			Stub();
		}
	
		public static void Stub()
		{
			var nums = Range(-10000, 20001).Reverse().ToList();  // => [10000, 9999, ... , -9999, -10000]  
			Action task1 = () => WriteLine(nums.Sum());  
			Action task2 = () => { nums.Sort(); WriteLine(nums.Sum()); };  
			Parallel.Invoke(task1, task2);  

			Action task3 = () => WriteLine(nums.OrderBy(x => x).Sum());  
			Parallel.Invoke(task1, task3);  			
		}
	}
}
	
	