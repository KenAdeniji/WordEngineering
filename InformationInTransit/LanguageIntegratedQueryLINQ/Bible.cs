#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InformationInTransit.SacredText
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Bible : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAMixAPool(AMixAPool instance);
    partial void UpdateAMixAPool(AMixAPool instance);
    partial void DeleteAMixAPool(AMixAPool instance);
    partial void InsertBibleBook(BibleBook instance);
    partial void UpdateBibleBook(BibleBook instance);
    partial void DeleteBibleBook(BibleBook instance);
    partial void InsertExact(Exact instance);
    partial void UpdateExact(Exact instance);
    partial void DeleteExact(Exact instance);
    partial void InsertMeetMyEndThrough(MeetMyEndThrough instance);
    partial void UpdateMeetMyEndThrough(MeetMyEndThrough instance);
    partial void DeleteMeetMyEndThrough(MeetMyEndThrough instance);
    partial void InsertPhraseTwoOrMoreWordsThatReOccur(PhraseTwoOrMoreWordsThatReOccur instance);
    partial void UpdatePhraseTwoOrMoreWordsThatReOccur(PhraseTwoOrMoreWordsThatReOccur instance);
    partial void DeletePhraseTwoOrMoreWordsThatReOccur(PhraseTwoOrMoreWordsThatReOccur instance);
    partial void InsertRelatedVerses(RelatedVerses instance);
    partial void UpdateRelatedVerses(RelatedVerses instance);
    partial void DeleteRelatedVerses(RelatedVerses instance);
    partial void InsertRelation(Relation instance);
    partial void UpdateRelation(Relation instance);
    partial void DeleteRelation(Relation instance);
    partial void InsertRelationType(RelationType instance);
    partial void UpdateRelationType(RelationType instance);
    partial void DeleteRelationType(RelationType instance);
    partial void InsertScripture(Scripture instance);
    partial void UpdateScripture(Scripture instance);
    partial void DeleteScripture(Scripture instance);
    partial void InsertSQL(SQL instance);
    partial void UpdateSQL(SQL instance);
    partial void DeleteSQL(SQL instance);
    partial void InsertTerminus(Terminus instance);
    partial void UpdateTerminus(Terminus instance);
    partial void DeleteTerminus(Terminus instance);
    partial void InsertToMostExtentOfTalent(ToMostExtentOfTalent instance);
    partial void UpdateToMostExtentOfTalent(ToMostExtentOfTalent instance);
    partial void DeleteToMostExtentOfTalent(ToMostExtentOfTalent instance);
    partial void InsertWorldWould(WorldWould instance);
    partial void UpdateWorldWould(WorldWould instance);
    partial void DeleteWorldWould(WorldWould instance);
    #endregion
		
		public Bible(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Bible(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Bible(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Bible(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AMixAPool> AMixAPool
		{
			get
			{
				return this.GetTable<AMixAPool>();
			}
		}
		
		public System.Data.Linq.Table<BibleBook> BibleBook
		{
			get
			{
				return this.GetTable<BibleBook>();
			}
		}
		
		public System.Data.Linq.Table<Exact> Exact
		{
			get
			{
				return this.GetTable<Exact>();
			}
		}
		
		public System.Data.Linq.Table<MeetMyEndThrough> MeetMyEndThrough
		{
			get
			{
				return this.GetTable<MeetMyEndThrough>();
			}
		}
		
		public System.Data.Linq.Table<PhraseTwoOrMoreWordsThatReOccur> PhraseTwoOrMoreWordsThatReOccur
		{
			get
			{
				return this.GetTable<PhraseTwoOrMoreWordsThatReOccur>();
			}
		}
		
		public System.Data.Linq.Table<RelatedVerses> RelatedVerses
		{
			get
			{
				return this.GetTable<RelatedVerses>();
			}
		}
		
		public System.Data.Linq.Table<Relation> Relation
		{
			get
			{
				return this.GetTable<Relation>();
			}
		}
		
		public System.Data.Linq.Table<RelationType> RelationType
		{
			get
			{
				return this.GetTable<RelationType>();
			}
		}
		
		public System.Data.Linq.Table<Scripture> Scripture
		{
			get
			{
				return this.GetTable<Scripture>();
			}
		}
		
		public System.Data.Linq.Table<SQL> SQL
		{
			get
			{
				return this.GetTable<SQL>();
			}
		}
		
		public System.Data.Linq.Table<Terminus> Terminus
		{
			get
			{
				return this.GetTable<Terminus>();
			}
		}
		
		public System.Data.Linq.Table<ToMostExtentOfTalent> ToMostExtentOfTalent
		{
			get
			{
				return this.GetTable<ToMostExtentOfTalent>();
			}
		}
		
		public System.Data.Linq.Table<WorldWould> WorldWould
		{
			get
			{
				return this.GetTable<WorldWould>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AMixAPool")]
	public partial class AMixAPool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AMixAPoolID;
		
		private System.DateTime _Dated;
		
		private string _ScriptureReference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMixAPoolIDChanging(int value);
    partial void OnAMixAPoolIDChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnScriptureReferenceChanging(string value);
    partial void OnScriptureReferenceChanged();
    #endregion
		
		public AMixAPool()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMixAPoolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AMixAPoolID
		{
			get
			{
				return this._AMixAPoolID;
			}
			set
			{
				if ((this._AMixAPoolID != value))
				{
					this.OnAMixAPoolIDChanging(value);
					this.SendPropertyChanging();
					this._AMixAPoolID = value;
					this.SendPropertyChanged("AMixAPoolID");
					this.OnAMixAPoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL")]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptureReference", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ScriptureReference
		{
			get
			{
				return this._ScriptureReference;
			}
			set
			{
				if ((this._ScriptureReference != value))
				{
					this.OnScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._ScriptureReference = value;
					this.SendPropertyChanged("ScriptureReference");
					this.OnScriptureReferenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BibleBook")]
	public partial class BibleBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookId;
		
		private string _BookTitle;
		
		private int _Chapters;
		
		private int _ChapterLastVerseLast;
		
		private int _VerseIdSequenceFirst;
		
		private int _VerseIdSequenceLast;
		
		private string _Testament;
		
		private string _Actor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnBookTitleChanging(string value);
    partial void OnBookTitleChanged();
    partial void OnChaptersChanging(int value);
    partial void OnChaptersChanged();
    partial void OnChapterLastVerseLastChanging(int value);
    partial void OnChapterLastVerseLastChanged();
    partial void OnVerseIdSequenceFirstChanging(int value);
    partial void OnVerseIdSequenceFirstChanged();
    partial void OnVerseIdSequenceLastChanging(int value);
    partial void OnVerseIdSequenceLastChanged();
    partial void OnTestamentChanging(string value);
    partial void OnTestamentChanged();
    partial void OnActorChanging(string value);
    partial void OnActorChanged();
    #endregion
		
		public BibleBook()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bookId", Storage="_BookId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bookTitle", Storage="_BookTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BookTitle
		{
			get
			{
				return this._BookTitle;
			}
			set
			{
				if ((this._BookTitle != value))
				{
					this.OnBookTitleChanging(value);
					this.SendPropertyChanging();
					this._BookTitle = value;
					this.SendPropertyChanged("BookTitle");
					this.OnBookTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chapters", Storage="_Chapters", DbType="Int NOT NULL")]
		public int Chapters
		{
			get
			{
				return this._Chapters;
			}
			set
			{
				if ((this._Chapters != value))
				{
					this.OnChaptersChanging(value);
					this.SendPropertyChanging();
					this._Chapters = value;
					this.SendPropertyChanged("Chapters");
					this.OnChaptersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chapterLastVerseLast", Storage="_ChapterLastVerseLast", DbType="Int NOT NULL")]
		public int ChapterLastVerseLast
		{
			get
			{
				return this._ChapterLastVerseLast;
			}
			set
			{
				if ((this._ChapterLastVerseLast != value))
				{
					this.OnChapterLastVerseLastChanging(value);
					this.SendPropertyChanging();
					this._ChapterLastVerseLast = value;
					this.SendPropertyChanged("ChapterLastVerseLast");
					this.OnChapterLastVerseLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="verseIdSequenceFirst", Storage="_VerseIdSequenceFirst", DbType="Int NOT NULL")]
		public int VerseIdSequenceFirst
		{
			get
			{
				return this._VerseIdSequenceFirst;
			}
			set
			{
				if ((this._VerseIdSequenceFirst != value))
				{
					this.OnVerseIdSequenceFirstChanging(value);
					this.SendPropertyChanging();
					this._VerseIdSequenceFirst = value;
					this.SendPropertyChanged("VerseIdSequenceFirst");
					this.OnVerseIdSequenceFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="verseIdSequenceLast", Storage="_VerseIdSequenceLast", DbType="Int NOT NULL")]
		public int VerseIdSequenceLast
		{
			get
			{
				return this._VerseIdSequenceLast;
			}
			set
			{
				if ((this._VerseIdSequenceLast != value))
				{
					this.OnVerseIdSequenceLastChanging(value);
					this.SendPropertyChanging();
					this._VerseIdSequenceLast = value;
					this.SendPropertyChanged("VerseIdSequenceLast");
					this.OnVerseIdSequenceLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="testament", Storage="_Testament", AutoSync=AutoSync.Always, DbType="VarChar(3) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="(case when [bookId]<=(39) then \'Old\' else \'New\' end)")]
		public string Testament
		{
			get
			{
				return this._Testament;
			}
			set
			{
				if ((this._Testament != value))
				{
					this.OnTestamentChanging(value);
					this.SendPropertyChanging();
					this._Testament = value;
					this.SendPropertyChanged("Testament");
					this.OnTestamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="actor", Storage="_Actor", DbType="VarChar(50)")]
		public string Actor
		{
			get
			{
				return this._Actor;
			}
			set
			{
				if ((this._Actor != value))
				{
					this.OnActorChanging(value);
					this.SendPropertyChanging();
					this._Actor = value;
					this.SendPropertyChanged("Actor");
					this.OnActorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exact")]
	public partial class Exact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExactID;
		
		private string _BibleWord;
		
		private string _FirstScriptureReference;
		
		private string _LastScriptureReference;
		
		private System.Nullable<int> _Difference;
		
		private int _Occurrence;
		
		private System.Nullable<int> _AlphabetSequenceIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExactIDChanging(int value);
    partial void OnExactIDChanged();
    partial void OnBibleWordChanging(string value);
    partial void OnBibleWordChanged();
    partial void OnFirstScriptureReferenceChanging(string value);
    partial void OnFirstScriptureReferenceChanged();
    partial void OnLastScriptureReferenceChanging(string value);
    partial void OnLastScriptureReferenceChanged();
    partial void OnDifferenceChanging(System.Nullable<int> value);
    partial void OnDifferenceChanged();
    partial void OnOccurrenceChanging(int value);
    partial void OnOccurrenceChanged();
    partial void OnAlphabetSequenceIndexChanging(System.Nullable<int> value);
    partial void OnAlphabetSequenceIndexChanged();
    #endregion
		
		public Exact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExactID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ExactID
		{
			get
			{
				return this._ExactID;
			}
			set
			{
				if ((this._ExactID != value))
				{
					this.OnExactIDChanging(value);
					this.SendPropertyChanging();
					this._ExactID = value;
					this.SendPropertyChanged("ExactID");
					this.OnExactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibleWord", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BibleWord
		{
			get
			{
				return this._BibleWord;
			}
			set
			{
				if ((this._BibleWord != value))
				{
					this.OnBibleWordChanging(value);
					this.SendPropertyChanging();
					this._BibleWord = value;
					this.SendPropertyChanged("BibleWord");
					this.OnBibleWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstScriptureReference", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstScriptureReference
		{
			get
			{
				return this._FirstScriptureReference;
			}
			set
			{
				if ((this._FirstScriptureReference != value))
				{
					this.OnFirstScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._FirstScriptureReference = value;
					this.SendPropertyChanged("FirstScriptureReference");
					this.OnFirstScriptureReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastScriptureReference", DbType="VarChar(30)")]
		public string LastScriptureReference
		{
			get
			{
				return this._LastScriptureReference;
			}
			set
			{
				if ((this._LastScriptureReference != value))
				{
					this.OnLastScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._LastScriptureReference = value;
					this.SendPropertyChanged("LastScriptureReference");
					this.OnLastScriptureReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difference", DbType="Int")]
		public System.Nullable<int> Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this.OnDifferenceChanging(value);
					this.SendPropertyChanging();
					this._Difference = value;
					this.SendPropertyChanged("Difference");
					this.OnDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occurrence", DbType="Int NOT NULL")]
		public int Occurrence
		{
			get
			{
				return this._Occurrence;
			}
			set
			{
				if ((this._Occurrence != value))
				{
					this.OnOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._Occurrence = value;
					this.SendPropertyChanged("Occurrence");
					this.OnOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlphabetSequenceIndex", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="([dbo].[udf_AlphabetSequenceIndex]([BibleWord]))")]
		public System.Nullable<int> AlphabetSequenceIndex
		{
			get
			{
				return this._AlphabetSequenceIndex;
			}
			set
			{
				if ((this._AlphabetSequenceIndex != value))
				{
					this.OnAlphabetSequenceIndexChanging(value);
					this.SendPropertyChanging();
					this._AlphabetSequenceIndex = value;
					this.SendPropertyChanged("AlphabetSequenceIndex");
					this.OnAlphabetSequenceIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetMyEndThrough")]
	public partial class MeetMyEndThrough : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetMyEndThroughID;
		
		private long _Number;
		
		private string _Phrase;
		
		private string _FirstOccurrence;
		
		private string _LastOccurrence;
		
		private System.Nullable<int> _Difference;
		
		private int _FrequencyOfOccurrence;
		
		private System.Nullable<int> _AlphabetSequenceIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetMyEndThroughIDChanging(int value);
    partial void OnMeetMyEndThroughIDChanged();
    partial void OnNumberChanging(long value);
    partial void OnNumberChanged();
    partial void OnPhraseChanging(string value);
    partial void OnPhraseChanged();
    partial void OnFirstOccurrenceChanging(string value);
    partial void OnFirstOccurrenceChanged();
    partial void OnLastOccurrenceChanging(string value);
    partial void OnLastOccurrenceChanged();
    partial void OnDifferenceChanging(System.Nullable<int> value);
    partial void OnDifferenceChanged();
    partial void OnFrequencyOfOccurrenceChanging(int value);
    partial void OnFrequencyOfOccurrenceChanged();
    partial void OnAlphabetSequenceIndexChanging(System.Nullable<int> value);
    partial void OnAlphabetSequenceIndexChanged();
    #endregion
		
		public MeetMyEndThrough()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetMyEndThroughID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetMyEndThroughID
		{
			get
			{
				return this._MeetMyEndThroughID;
			}
			set
			{
				if ((this._MeetMyEndThroughID != value))
				{
					this.OnMeetMyEndThroughIDChanging(value);
					this.SendPropertyChanging();
					this._MeetMyEndThroughID = value;
					this.SendPropertyChanged("MeetMyEndThroughID");
					this.OnMeetMyEndThroughIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt NOT NULL")]
		public long Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phrase", DbType="VarChar(255)")]
		public string Phrase
		{
			get
			{
				return this._Phrase;
			}
			set
			{
				if ((this._Phrase != value))
				{
					this.OnPhraseChanging(value);
					this.SendPropertyChanging();
					this._Phrase = value;
					this.SendPropertyChanged("Phrase");
					this.OnPhraseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstOccurrence", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstOccurrence
		{
			get
			{
				return this._FirstOccurrence;
			}
			set
			{
				if ((this._FirstOccurrence != value))
				{
					this.OnFirstOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._FirstOccurrence = value;
					this.SendPropertyChanged("FirstOccurrence");
					this.OnFirstOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastOccurrence", DbType="VarChar(30)")]
		public string LastOccurrence
		{
			get
			{
				return this._LastOccurrence;
			}
			set
			{
				if ((this._LastOccurrence != value))
				{
					this.OnLastOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._LastOccurrence = value;
					this.SendPropertyChanged("LastOccurrence");
					this.OnLastOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difference", DbType="Int")]
		public System.Nullable<int> Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this.OnDifferenceChanging(value);
					this.SendPropertyChanging();
					this._Difference = value;
					this.SendPropertyChanged("Difference");
					this.OnDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyOfOccurrence", DbType="Int NOT NULL")]
		public int FrequencyOfOccurrence
		{
			get
			{
				return this._FrequencyOfOccurrence;
			}
			set
			{
				if ((this._FrequencyOfOccurrence != value))
				{
					this.OnFrequencyOfOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._FrequencyOfOccurrence = value;
					this.SendPropertyChanged("FrequencyOfOccurrence");
					this.OnFrequencyOfOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlphabetSequenceIndex", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="([dbo].[udf_AlphabetSequenceIndex]([phrase]))")]
		public System.Nullable<int> AlphabetSequenceIndex
		{
			get
			{
				return this._AlphabetSequenceIndex;
			}
			set
			{
				if ((this._AlphabetSequenceIndex != value))
				{
					this.OnAlphabetSequenceIndexChanging(value);
					this.SendPropertyChanging();
					this._AlphabetSequenceIndex = value;
					this.SendPropertyChanged("AlphabetSequenceIndex");
					this.OnAlphabetSequenceIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhraseTwoOrMoreWordsThatReOccur")]
	public partial class PhraseTwoOrMoreWordsThatReOccur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhraseTwoOrMoreWordsThatReOccurID;
		
		private string _BiblePhrase;
		
		private string _FirstOccurrence;
		
		private string _LastOccurrence;
		
		private System.Nullable<int> _Difference;
		
		private int _FrequencyOfOccurrence;
		
		private System.Nullable<int> _AlphabetSequenceIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhraseTwoOrMoreWordsThatReOccurIDChanging(int value);
    partial void OnPhraseTwoOrMoreWordsThatReOccurIDChanged();
    partial void OnBiblePhraseChanging(string value);
    partial void OnBiblePhraseChanged();
    partial void OnFirstOccurrenceChanging(string value);
    partial void OnFirstOccurrenceChanged();
    partial void OnLastOccurrenceChanging(string value);
    partial void OnLastOccurrenceChanged();
    partial void OnDifferenceChanging(System.Nullable<int> value);
    partial void OnDifferenceChanged();
    partial void OnFrequencyOfOccurrenceChanging(int value);
    partial void OnFrequencyOfOccurrenceChanged();
    partial void OnAlphabetSequenceIndexChanging(System.Nullable<int> value);
    partial void OnAlphabetSequenceIndexChanged();
    #endregion
		
		public PhraseTwoOrMoreWordsThatReOccur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhraseTwoOrMoreWordsThatReOccurID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int PhraseTwoOrMoreWordsThatReOccurID
		{
			get
			{
				return this._PhraseTwoOrMoreWordsThatReOccurID;
			}
			set
			{
				if ((this._PhraseTwoOrMoreWordsThatReOccurID != value))
				{
					this.OnPhraseTwoOrMoreWordsThatReOccurIDChanging(value);
					this.SendPropertyChanging();
					this._PhraseTwoOrMoreWordsThatReOccurID = value;
					this.SendPropertyChanged("PhraseTwoOrMoreWordsThatReOccurID");
					this.OnPhraseTwoOrMoreWordsThatReOccurIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiblePhrase", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BiblePhrase
		{
			get
			{
				return this._BiblePhrase;
			}
			set
			{
				if ((this._BiblePhrase != value))
				{
					this.OnBiblePhraseChanging(value);
					this.SendPropertyChanging();
					this._BiblePhrase = value;
					this.SendPropertyChanged("BiblePhrase");
					this.OnBiblePhraseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstOccurrence", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstOccurrence
		{
			get
			{
				return this._FirstOccurrence;
			}
			set
			{
				if ((this._FirstOccurrence != value))
				{
					this.OnFirstOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._FirstOccurrence = value;
					this.SendPropertyChanged("FirstOccurrence");
					this.OnFirstOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastOccurrence", DbType="VarChar(30)")]
		public string LastOccurrence
		{
			get
			{
				return this._LastOccurrence;
			}
			set
			{
				if ((this._LastOccurrence != value))
				{
					this.OnLastOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._LastOccurrence = value;
					this.SendPropertyChanged("LastOccurrence");
					this.OnLastOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difference", DbType="Int")]
		public System.Nullable<int> Difference
		{
			get
			{
				return this._Difference;
			}
			set
			{
				if ((this._Difference != value))
				{
					this.OnDifferenceChanging(value);
					this.SendPropertyChanging();
					this._Difference = value;
					this.SendPropertyChanged("Difference");
					this.OnDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyOfOccurrence", DbType="Int NOT NULL")]
		public int FrequencyOfOccurrence
		{
			get
			{
				return this._FrequencyOfOccurrence;
			}
			set
			{
				if ((this._FrequencyOfOccurrence != value))
				{
					this.OnFrequencyOfOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._FrequencyOfOccurrence = value;
					this.SendPropertyChanged("FrequencyOfOccurrence");
					this.OnFrequencyOfOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlphabetSequenceIndex", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="([dbo].[udf_AlphabetSequenceIndex]([BiblePhrase]))")]
		public System.Nullable<int> AlphabetSequenceIndex
		{
			get
			{
				return this._AlphabetSequenceIndex;
			}
			set
			{
				if ((this._AlphabetSequenceIndex != value))
				{
					this.OnAlphabetSequenceIndexChanging(value);
					this.SendPropertyChanging();
					this._AlphabetSequenceIndex = value;
					this.SendPropertyChanged("AlphabetSequenceIndex");
					this.OnAlphabetSequenceIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelatedVerses")]
	public partial class RelatedVerses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelatedVersesID;
		
		private string _ScriptureReference;
		
		private string _Alike;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelatedVersesIDChanging(int value);
    partial void OnRelatedVersesIDChanged();
    partial void OnScriptureReferenceChanging(string value);
    partial void OnScriptureReferenceChanged();
    partial void OnAlikeChanging(string value);
    partial void OnAlikeChanged();
    #endregion
		
		public RelatedVerses()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedVersesID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RelatedVersesID
		{
			get
			{
				return this._RelatedVersesID;
			}
			set
			{
				if ((this._RelatedVersesID != value))
				{
					this.OnRelatedVersesIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedVersesID = value;
					this.SendPropertyChanged("RelatedVersesID");
					this.OnRelatedVersesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptureReference", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScriptureReference
		{
			get
			{
				return this._ScriptureReference;
			}
			set
			{
				if ((this._ScriptureReference != value))
				{
					this.OnScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._ScriptureReference = value;
					this.SendPropertyChanged("ScriptureReference");
					this.OnScriptureReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alike", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Alike
		{
			get
			{
				return this._Alike;
			}
			set
			{
				if ((this._Alike != value))
				{
					this.OnAlikeChanging(value);
					this.SendPropertyChanging();
					this._Alike = value;
					this.SendPropertyChanged("Alike");
					this.OnAlikeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation")]
	public partial class Relation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationID;
		
		private System.DateTime _Dated;
		
		private System.Nullable<int> _AMixAPoolID;
		
		private string _ScriptureReference;
		
		private System.Nullable<int> _RelationTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationIDChanging(int value);
    partial void OnRelationIDChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnAMixAPoolIDChanging(System.Nullable<int> value);
    partial void OnAMixAPoolIDChanged();
    partial void OnScriptureReferenceChanging(string value);
    partial void OnScriptureReferenceChanged();
    partial void OnRelationTypeIDChanging(System.Nullable<int> value);
    partial void OnRelationTypeIDChanged();
    #endregion
		
		public Relation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelationID
		{
			get
			{
				return this._RelationID;
			}
			set
			{
				if ((this._RelationID != value))
				{
					this.OnRelationIDChanging(value);
					this.SendPropertyChanging();
					this._RelationID = value;
					this.SendPropertyChanged("RelationID");
					this.OnRelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL")]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMixAPoolID", DbType="Int")]
		public System.Nullable<int> AMixAPoolID
		{
			get
			{
				return this._AMixAPoolID;
			}
			set
			{
				if ((this._AMixAPoolID != value))
				{
					this.OnAMixAPoolIDChanging(value);
					this.SendPropertyChanging();
					this._AMixAPoolID = value;
					this.SendPropertyChanged("AMixAPoolID");
					this.OnAMixAPoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptureReference", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ScriptureReference
		{
			get
			{
				return this._ScriptureReference;
			}
			set
			{
				if ((this._ScriptureReference != value))
				{
					this.OnScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._ScriptureReference = value;
					this.SendPropertyChanged("ScriptureReference");
					this.OnScriptureReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationTypeID", DbType="Int")]
		public System.Nullable<int> RelationTypeID
		{
			get
			{
				return this._RelationTypeID;
			}
			set
			{
				if ((this._RelationTypeID != value))
				{
					this.OnRelationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RelationTypeID = value;
					this.SendPropertyChanged("RelationTypeID");
					this.OnRelationTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelationType")]
	public partial class RelationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationTypeID;
		
		private System.DateTime _Dated;
		
		private string _Commentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationTypeIDChanging(int value);
    partial void OnRelationTypeIDChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnCommentaryChanging(string value);
    partial void OnCommentaryChanged();
    #endregion
		
		public RelationType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelationTypeID
		{
			get
			{
				return this._RelationTypeID;
			}
			set
			{
				if ((this._RelationTypeID != value))
				{
					this.OnRelationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RelationTypeID = value;
					this.SendPropertyChanged("RelationTypeID");
					this.OnRelationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL")]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commentary", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Commentary
		{
			get
			{
				return this._Commentary;
			}
			set
			{
				if ((this._Commentary != value))
				{
					this.OnCommentaryChanging(value);
					this.SendPropertyChanging();
					this._Commentary = value;
					this.SendPropertyChanged("Commentary");
					this.OnCommentaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scripture")]
	public partial class Scripture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookId;
		
		private int _ChapterId;
		
		private int _VerseId;
		
		private string _AmericanStandardBible;
		
		private string _BibleInBasicEnglish;
		
		private string _DarbyEnglishBible;
		
		private string _KingJamesVersion;
		
		private string _WebsterBible;
		
		private string _WorldEnglishBible;
		
		private string _YoungLiteralTranslation;
		
		private string _Testament;
		
		private string _BookTitle;
		
		private string _ScriptureReference;
		
		private int _ChapterIdSequence;
		
		private int _VerseIdSequence;
		
		private System.Nullable<decimal> _ChapterIdSequencePercent;
		
		private System.Nullable<decimal> _VerseIdSequencePercent;
		
		private string _BibleReference;
		
		private string _Commentary;
		
		private string _BookReference;
		
		private string _Uri;
		
		private System.Nullable<System.DateTime> _Dated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnChapterIdChanging(int value);
    partial void OnChapterIdChanged();
    partial void OnVerseIdChanging(int value);
    partial void OnVerseIdChanged();
    partial void OnAmericanStandardBibleChanging(string value);
    partial void OnAmericanStandardBibleChanged();
    partial void OnBibleInBasicEnglishChanging(string value);
    partial void OnBibleInBasicEnglishChanged();
    partial void OnDarbyEnglishBibleChanging(string value);
    partial void OnDarbyEnglishBibleChanged();
    partial void OnKingJamesVersionChanging(string value);
    partial void OnKingJamesVersionChanged();
    partial void OnWebsterBibleChanging(string value);
    partial void OnWebsterBibleChanged();
    partial void OnWorldEnglishBibleChanging(string value);
    partial void OnWorldEnglishBibleChanged();
    partial void OnYoungLiteralTranslationChanging(string value);
    partial void OnYoungLiteralTranslationChanged();
    partial void OnTestamentChanging(string value);
    partial void OnTestamentChanged();
    partial void OnBookTitleChanging(string value);
    partial void OnBookTitleChanged();
    partial void OnScriptureReferenceChanging(string value);
    partial void OnScriptureReferenceChanged();
    partial void OnChapterIdSequenceChanging(int value);
    partial void OnChapterIdSequenceChanged();
    partial void OnVerseIdSequenceChanging(int value);
    partial void OnVerseIdSequenceChanged();
    partial void OnChapterIdSequencePercentChanging(System.Nullable<decimal> value);
    partial void OnChapterIdSequencePercentChanged();
    partial void OnVerseIdSequencePercentChanging(System.Nullable<decimal> value);
    partial void OnVerseIdSequencePercentChanged();
    partial void OnBibleReferenceChanging(string value);
    partial void OnBibleReferenceChanged();
    partial void OnCommentaryChanging(string value);
    partial void OnCommentaryChanged();
    partial void OnBookReferenceChanging(string value);
    partial void OnBookReferenceChanged();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    partial void OnDatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatedChanged();
    #endregion
		
		public Scripture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bookId", Storage="_BookId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chapterId", Storage="_ChapterId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChapterId
		{
			get
			{
				return this._ChapterId;
			}
			set
			{
				if ((this._ChapterId != value))
				{
					this.OnChapterIdChanging(value);
					this.SendPropertyChanging();
					this._ChapterId = value;
					this.SendPropertyChanged("ChapterId");
					this.OnChapterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="verseId", Storage="_VerseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VerseId
		{
			get
			{
				return this._VerseId;
			}
			set
			{
				if ((this._VerseId != value))
				{
					this.OnVerseIdChanging(value);
					this.SendPropertyChanging();
					this._VerseId = value;
					this.SendPropertyChanged("VerseId");
					this.OnVerseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmericanStandardBible", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AmericanStandardBible
		{
			get
			{
				return this._AmericanStandardBible;
			}
			set
			{
				if ((this._AmericanStandardBible != value))
				{
					this.OnAmericanStandardBibleChanging(value);
					this.SendPropertyChanging();
					this._AmericanStandardBible = value;
					this.SendPropertyChanged("AmericanStandardBible");
					this.OnAmericanStandardBibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibleInBasicEnglish", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BibleInBasicEnglish
		{
			get
			{
				return this._BibleInBasicEnglish;
			}
			set
			{
				if ((this._BibleInBasicEnglish != value))
				{
					this.OnBibleInBasicEnglishChanging(value);
					this.SendPropertyChanging();
					this._BibleInBasicEnglish = value;
					this.SendPropertyChanged("BibleInBasicEnglish");
					this.OnBibleInBasicEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DarbyEnglishBible", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DarbyEnglishBible
		{
			get
			{
				return this._DarbyEnglishBible;
			}
			set
			{
				if ((this._DarbyEnglishBible != value))
				{
					this.OnDarbyEnglishBibleChanging(value);
					this.SendPropertyChanging();
					this._DarbyEnglishBible = value;
					this.SendPropertyChanged("DarbyEnglishBible");
					this.OnDarbyEnglishBibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KingJamesVersion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KingJamesVersion
		{
			get
			{
				return this._KingJamesVersion;
			}
			set
			{
				if ((this._KingJamesVersion != value))
				{
					this.OnKingJamesVersionChanging(value);
					this.SendPropertyChanging();
					this._KingJamesVersion = value;
					this.SendPropertyChanged("KingJamesVersion");
					this.OnKingJamesVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsterBible", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WebsterBible
		{
			get
			{
				return this._WebsterBible;
			}
			set
			{
				if ((this._WebsterBible != value))
				{
					this.OnWebsterBibleChanging(value);
					this.SendPropertyChanging();
					this._WebsterBible = value;
					this.SendPropertyChanged("WebsterBible");
					this.OnWebsterBibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldEnglishBible", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorldEnglishBible
		{
			get
			{
				return this._WorldEnglishBible;
			}
			set
			{
				if ((this._WorldEnglishBible != value))
				{
					this.OnWorldEnglishBibleChanging(value);
					this.SendPropertyChanging();
					this._WorldEnglishBible = value;
					this.SendPropertyChanged("WorldEnglishBible");
					this.OnWorldEnglishBibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoungLiteralTranslation", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string YoungLiteralTranslation
		{
			get
			{
				return this._YoungLiteralTranslation;
			}
			set
			{
				if ((this._YoungLiteralTranslation != value))
				{
					this.OnYoungLiteralTranslationChanging(value);
					this.SendPropertyChanging();
					this._YoungLiteralTranslation = value;
					this.SendPropertyChanged("YoungLiteralTranslation");
					this.OnYoungLiteralTranslationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="testament", Storage="_Testament", AutoSync=AutoSync.Always, DbType="VarChar(3) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="(case when [bookId]<=(39) then \'Old\' else \'New\' end)")]
		public string Testament
		{
			get
			{
				return this._Testament;
			}
			set
			{
				if ((this._Testament != value))
				{
					this.OnTestamentChanging(value);
					this.SendPropertyChanging();
					this._Testament = value;
					this.SendPropertyChanged("Testament");
					this.OnTestamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bookTitle", Storage="_BookTitle", AutoSync=AutoSync.Always, DbType="NVarChar(MAX)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="([dbo].[udf_BookTitle]([bookID]))")]
		public string BookTitle
		{
			get
			{
				return this._BookTitle;
			}
			set
			{
				if ((this._BookTitle != value))
				{
					this.OnBookTitleChanging(value);
					this.SendPropertyChanging();
					this._BookTitle = value;
					this.SendPropertyChanged("BookTitle");
					this.OnBookTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="scriptureReference", Storage="_ScriptureReference", AutoSync=AutoSync.Always, DbType="NVarChar(MAX)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="([dbo].[udf_ScriptureReference]([bookID],[chapterID],[verseID]))")]
		public string ScriptureReference
		{
			get
			{
				return this._ScriptureReference;
			}
			set
			{
				if ((this._ScriptureReference != value))
				{
					this.OnScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._ScriptureReference = value;
					this.SendPropertyChanged("ScriptureReference");
					this.OnScriptureReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chapterIdSequence", Storage="_ChapterIdSequence", DbType="Int NOT NULL")]
		public int ChapterIdSequence
		{
			get
			{
				return this._ChapterIdSequence;
			}
			set
			{
				if ((this._ChapterIdSequence != value))
				{
					this.OnChapterIdSequenceChanging(value);
					this.SendPropertyChanging();
					this._ChapterIdSequence = value;
					this.SendPropertyChanged("ChapterIdSequence");
					this.OnChapterIdSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="verseIdSequence", Storage="_VerseIdSequence", DbType="Int NOT NULL")]
		public int VerseIdSequence
		{
			get
			{
				return this._VerseIdSequence;
			}
			set
			{
				if ((this._VerseIdSequence != value))
				{
					this.OnVerseIdSequenceChanging(value);
					this.SendPropertyChanging();
					this._VerseIdSequence = value;
					this.SendPropertyChanged("VerseIdSequence");
					this.OnVerseIdSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chapterIdSequencePercent", Storage="_ChapterIdSequencePercent", AutoSync=AutoSync.Always, DbType="Decimal(20,6)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="(([chapterIdSequence]*(100.0))/(1189))")]
		public System.Nullable<decimal> ChapterIdSequencePercent
		{
			get
			{
				return this._ChapterIdSequencePercent;
			}
			set
			{
				if ((this._ChapterIdSequencePercent != value))
				{
					this.OnChapterIdSequencePercentChanging(value);
					this.SendPropertyChanging();
					this._ChapterIdSequencePercent = value;
					this.SendPropertyChanged("ChapterIdSequencePercent");
					this.OnChapterIdSequencePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="verseIdSequencePercent", Storage="_VerseIdSequencePercent", AutoSync=AutoSync.Always, DbType="Decimal(21,7)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="(([verseIdSequence]*(100.0))/(31102))")]
		public System.Nullable<decimal> VerseIdSequencePercent
		{
			get
			{
				return this._VerseIdSequencePercent;
			}
			set
			{
				if ((this._VerseIdSequencePercent != value))
				{
					this.OnVerseIdSequencePercentChanging(value);
					this.SendPropertyChanging();
					this._VerseIdSequencePercent = value;
					this.SendPropertyChanged("VerseIdSequencePercent");
					this.OnVerseIdSequencePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bibleReference", Storage="_BibleReference", AutoSync=AutoSync.Always, DbType="VarChar(8)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never, Expression="((right(\'00\'+CONVERT([varchar](2),[bookId],(0)),(2))+right(\'000\'+CONVERT([varchar" +
			"](3),[chapterId],(0)),(3)))+right(\'000\'+CONVERT([varchar](3),[verseId],(0)),(3))" +
			")")]
		public string BibleReference
		{
			get
			{
				return this._BibleReference;
			}
			set
			{
				if ((this._BibleReference != value))
				{
					this.OnBibleReferenceChanging(value);
					this.SendPropertyChanging();
					this._BibleReference = value;
					this.SendPropertyChanged("BibleReference");
					this.OnBibleReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="commentary", Storage="_Commentary", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Commentary
		{
			get
			{
				return this._Commentary;
			}
			set
			{
				if ((this._Commentary != value))
				{
					this.OnCommentaryChanging(value);
					this.SendPropertyChanging();
					this._Commentary = value;
					this.SendPropertyChanged("Commentary");
					this.OnCommentaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bookReference", Storage="_BookReference", DbType="VarChar(1024)")]
		public string BookReference
		{
			get
			{
				return this._BookReference;
			}
			set
			{
				if ((this._BookReference != value))
				{
					this.OnBookReferenceChanging(value);
					this.SendPropertyChanging();
					this._BookReference = value;
					this.SendPropertyChanged("BookReference");
					this.OnBookReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="uri", Storage="_Uri", DbType="VarChar(1024)")]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime2(7)")]
		public System.Nullable<System.DateTime> Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SQL")]
	public partial class SQL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SQLID;
		
		private System.DateTime _Dated;
		
		private string _Query;
		
		private string _ScriptureReference;
		
		private string _Commentary;
		
		private System.Nullable<int> _ContactId;
		
		private string _Uri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSQLIDChanging(int value);
    partial void OnSQLIDChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnScriptureReferenceChanging(string value);
    partial void OnScriptureReferenceChanged();
    partial void OnCommentaryChanging(string value);
    partial void OnCommentaryChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    #endregion
		
		public SQL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SQLID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SQLID
		{
			get
			{
				return this._SQLID;
			}
			set
			{
				if ((this._SQLID != value))
				{
					this.OnSQLIDChanging(value);
					this.SendPropertyChanging();
					this._SQLID = value;
					this.SendPropertyChanged("SQLID");
					this.OnSQLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL")]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptureReference", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ScriptureReference
		{
			get
			{
				return this._ScriptureReference;
			}
			set
			{
				if ((this._ScriptureReference != value))
				{
					this.OnScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._ScriptureReference = value;
					this.SendPropertyChanged("ScriptureReference");
					this.OnScriptureReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commentary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Commentary
		{
			get
			{
				return this._Commentary;
			}
			set
			{
				if ((this._Commentary != value))
				{
					this.OnCommentaryChanging(value);
					this.SendPropertyChanging();
					this._Commentary = value;
					this.SendPropertyChanged("Commentary");
					this.OnCommentaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="Int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uri", DbType="VarChar(255)")]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terminus")]
	public partial class Terminus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TerminusID;
		
		private int _FirstWordId;
		
		private string _SecondWordId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerminusIDChanging(int value);
    partial void OnTerminusIDChanged();
    partial void OnFirstWordIdChanging(int value);
    partial void OnFirstWordIdChanged();
    partial void OnSecondWordIdChanging(string value);
    partial void OnSecondWordIdChanged();
    #endregion
		
		public Terminus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TerminusID
		{
			get
			{
				return this._TerminusID;
			}
			set
			{
				if ((this._TerminusID != value))
				{
					this.OnTerminusIDChanging(value);
					this.SendPropertyChanging();
					this._TerminusID = value;
					this.SendPropertyChanged("TerminusID");
					this.OnTerminusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstWordId", DbType="Int NOT NULL")]
		public int FirstWordId
		{
			get
			{
				return this._FirstWordId;
			}
			set
			{
				if ((this._FirstWordId != value))
				{
					this.OnFirstWordIdChanging(value);
					this.SendPropertyChanging();
					this._FirstWordId = value;
					this.SendPropertyChanged("FirstWordId");
					this.OnFirstWordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondWordId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string SecondWordId
		{
			get
			{
				return this._SecondWordId;
			}
			set
			{
				if ((this._SecondWordId != value))
				{
					this.OnSecondWordIdChanging(value);
					this.SendPropertyChanging();
					this._SecondWordId = value;
					this.SendPropertyChanged("SecondWordId");
					this.OnSecondWordIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ToMostExtentOfTalent")]
	public partial class ToMostExtentOfTalent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ToMostExtentOfTalentID;
		
		private int _BookId;
		
		private int _ChapterId;
		
		private int _VerseId;
		
		private string _BibleWord;
		
		private int _WordIndexInBible;
		
		private int _WordFrequencyInBible;
		
		private int _WordIndexInVerse;
		
		private int _WordFrequencyInVerse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnToMostExtentOfTalentIDChanging(int value);
    partial void OnToMostExtentOfTalentIDChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnChapterIdChanging(int value);
    partial void OnChapterIdChanged();
    partial void OnVerseIdChanging(int value);
    partial void OnVerseIdChanged();
    partial void OnBibleWordChanging(string value);
    partial void OnBibleWordChanged();
    partial void OnWordIndexInBibleChanging(int value);
    partial void OnWordIndexInBibleChanged();
    partial void OnWordFrequencyInBibleChanging(int value);
    partial void OnWordFrequencyInBibleChanged();
    partial void OnWordIndexInVerseChanging(int value);
    partial void OnWordIndexInVerseChanged();
    partial void OnWordFrequencyInVerseChanging(int value);
    partial void OnWordFrequencyInVerseChanged();
    #endregion
		
		public ToMostExtentOfTalent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMostExtentOfTalentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ToMostExtentOfTalentID
		{
			get
			{
				return this._ToMostExtentOfTalentID;
			}
			set
			{
				if ((this._ToMostExtentOfTalentID != value))
				{
					this.OnToMostExtentOfTalentIDChanging(value);
					this.SendPropertyChanging();
					this._ToMostExtentOfTalentID = value;
					this.SendPropertyChanged("ToMostExtentOfTalentID");
					this.OnToMostExtentOfTalentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterId", DbType="Int NOT NULL")]
		public int ChapterId
		{
			get
			{
				return this._ChapterId;
			}
			set
			{
				if ((this._ChapterId != value))
				{
					this.OnChapterIdChanging(value);
					this.SendPropertyChanging();
					this._ChapterId = value;
					this.SendPropertyChanged("ChapterId");
					this.OnChapterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerseId", DbType="Int NOT NULL")]
		public int VerseId
		{
			get
			{
				return this._VerseId;
			}
			set
			{
				if ((this._VerseId != value))
				{
					this.OnVerseIdChanging(value);
					this.SendPropertyChanging();
					this._VerseId = value;
					this.SendPropertyChanged("VerseId");
					this.OnVerseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibleWord", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string BibleWord
		{
			get
			{
				return this._BibleWord;
			}
			set
			{
				if ((this._BibleWord != value))
				{
					this.OnBibleWordChanging(value);
					this.SendPropertyChanging();
					this._BibleWord = value;
					this.SendPropertyChanged("BibleWord");
					this.OnBibleWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordIndexInBible", DbType="Int NOT NULL")]
		public int WordIndexInBible
		{
			get
			{
				return this._WordIndexInBible;
			}
			set
			{
				if ((this._WordIndexInBible != value))
				{
					this.OnWordIndexInBibleChanging(value);
					this.SendPropertyChanging();
					this._WordIndexInBible = value;
					this.SendPropertyChanged("WordIndexInBible");
					this.OnWordIndexInBibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordFrequencyInBible", DbType="Int NOT NULL")]
		public int WordFrequencyInBible
		{
			get
			{
				return this._WordFrequencyInBible;
			}
			set
			{
				if ((this._WordFrequencyInBible != value))
				{
					this.OnWordFrequencyInBibleChanging(value);
					this.SendPropertyChanging();
					this._WordFrequencyInBible = value;
					this.SendPropertyChanged("WordFrequencyInBible");
					this.OnWordFrequencyInBibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordIndexInVerse", DbType="Int NOT NULL")]
		public int WordIndexInVerse
		{
			get
			{
				return this._WordIndexInVerse;
			}
			set
			{
				if ((this._WordIndexInVerse != value))
				{
					this.OnWordIndexInVerseChanging(value);
					this.SendPropertyChanging();
					this._WordIndexInVerse = value;
					this.SendPropertyChanged("WordIndexInVerse");
					this.OnWordIndexInVerseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordFrequencyInVerse", DbType="Int NOT NULL")]
		public int WordFrequencyInVerse
		{
			get
			{
				return this._WordFrequencyInVerse;
			}
			set
			{
				if ((this._WordFrequencyInVerse != value))
				{
					this.OnWordFrequencyInVerseChanging(value);
					this.SendPropertyChanging();
					this._WordFrequencyInVerse = value;
					this.SendPropertyChanged("WordFrequencyInVerse");
					this.OnWordFrequencyInVerseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorldWould")]
	public partial class WorldWould : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorldWouldID;
		
		private System.DateTime _Dated;
		
		private string _Commentary;
		
		private string _Uri;
		
		private System.Nullable<int> _ContactId;
		
		private string _ScriptureReference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorldWouldIDChanging(int value);
    partial void OnWorldWouldIDChanged();
    partial void OnDatedChanging(System.DateTime value);
    partial void OnDatedChanged();
    partial void OnCommentaryChanging(string value);
    partial void OnCommentaryChanged();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnScriptureReferenceChanging(string value);
    partial void OnScriptureReferenceChanged();
    #endregion
		
		public WorldWould()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldWouldID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int WorldWouldID
		{
			get
			{
				return this._WorldWouldID;
			}
			set
			{
				if ((this._WorldWouldID != value))
				{
					this.OnWorldWouldIDChanging(value);
					this.SendPropertyChanging();
					this._WorldWouldID = value;
					this.SendPropertyChanged("WorldWouldID");
					this.OnWorldWouldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dated", DbType="DateTime NOT NULL")]
		public System.DateTime Dated
		{
			get
			{
				return this._Dated;
			}
			set
			{
				if ((this._Dated != value))
				{
					this.OnDatedChanging(value);
					this.SendPropertyChanging();
					this._Dated = value;
					this.SendPropertyChanged("Dated");
					this.OnDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commentary", DbType="VarChar(8000)")]
		public string Commentary
		{
			get
			{
				return this._Commentary;
			}
			set
			{
				if ((this._Commentary != value))
				{
					this.OnCommentaryChanging(value);
					this.SendPropertyChanging();
					this._Commentary = value;
					this.SendPropertyChanged("Commentary");
					this.OnCommentaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uri", DbType="VarChar(255)")]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="Int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptureReference", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScriptureReference
		{
			get
			{
				return this._ScriptureReference;
			}
			set
			{
				if ((this._ScriptureReference != value))
				{
					this.OnScriptureReferenceChanging(value);
					this.SendPropertyChanging();
					this._ScriptureReference = value;
					this.SendPropertyChanged("ScriptureReference");
					this.OnScriptureReferenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
